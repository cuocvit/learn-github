@model DATA.Entity.trip

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Tạo hành trình</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.start_point, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.start_point, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.start_point, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end_point, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end_point, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.end_point, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.status_confirm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status_confirm)
                    @Html.ValidationMessageFor(model => model.status_confirm, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status_update, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status_update)
                    @Html.ValidationMessageFor(model => model.status_update, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status_delete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status_delete)
                    @Html.ValidationMessageFor(model => model.status_delete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    <div class="form-group">
        <label class="control-label col-md-2">Tên khuyến mãi</label>
        <div class="col-md-10">
            @Html.DropDownList("id_discount", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_discount, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tên xe</label>
            <div class="col-md-10">
                @Html.DropDownList("vehicle_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.vehicle_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chair, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chair, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chair, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
